
import java.awt.Color;
import java.awt.Font;
import java.awt.Toolkit;
import java.io.File;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Pattern;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author sandip
 */
public class StockHandlerDashboard extends javax.swing.JFrame {

    DefaultTableModel model;

    /**
     * Creates new form CustomerHandlerDashboard
     */
    public StockHandlerDashboard() {
        initComponents();
        itemsTable.getTableHeader().setBackground(Color.lightGray);

        Font f = searchText.getFont();
        searchText.setFont(f.deriveFont(Font.ITALIC));
        searchText.setForeground(Color.GRAY);
        model = (DefaultTableModel) itemsTable.getModel();
        model.setNumRows(0);
        try {
            ResultSet rs = DataBaseHandler.getDbConn().createStatement().executeQuery("select *from cms.item");
            while (rs.next()) {
                Vector<String> v = new Vector<String>();
                v.add("" + rs.getInt(1));
                v.add(rs.getString(2));
                v.add(rs.getString(3));
                v.add(rs.getString(4));
                v.add(rs.getString(5));
                v.add("" + rs.getInt(6));

                v.add(rs.getString(7));

                model.addRow(v);
            }
        } catch (SQLException ex) {
            Logger.getLogger(StockHandlerDashboard.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel4 = new javax.swing.JLabel();
        itemName = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        itemPhoto = new javax.swing.JFormattedTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        addItemb = new javax.swing.JButton();
        itemUpdateb = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        itemsTable = new javax.swing.JTable();
        deleteItemb = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        itemTax = new javax.swing.JFormattedTextField();
        jLabel9 = new javax.swing.JLabel();
        itemQuantity = new javax.swing.JFormattedTextField();
        ItemSerialNumber = new javax.swing.JFormattedTextField();
        itemUploadb = new javax.swing.JButton();
        itemPrice = new javax.swing.JFormattedTextField();
        jLabel3 = new javax.swing.JLabel();
        Name = new javax.swing.JLabel();
        resetb = new javax.swing.JButton();
        searchText = new javax.swing.JTextField();
        Homeb = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1197, 754));
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setText(" Item Name ");

        itemName.setToolTipText("Enter USer Full Name");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel5.setText("Item  Serial Number  ");
        jLabel5.setToolTipText("");

        itemPhoto.setEditable(false);
        itemPhoto.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter()));
        itemPhoto.setText("image must be pixel 80*80");
        itemPhoto.setToolTipText("Enter 10 digit mob number ");
        itemPhoto.setMinimumSize(new java.awt.Dimension(64, 33));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel6.setText(" Item  Photo");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel7.setText("Tax");

        addItemb.setBackground(new java.awt.Color(204, 204, 204));
        addItemb.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        addItemb.setText("Add ");
        addItemb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addItembActionPerformed(evt);
            }
        });

        itemUpdateb.setBackground(new java.awt.Color(204, 204, 204));
        itemUpdateb.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        itemUpdateb.setText("Update");
        itemUpdateb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemUpdatebActionPerformed(evt);
            }
        });

        itemsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "itemId", "ItemName ", "itemSerialNum", "ItemPhoto", "Tax", "quantity", "Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        itemsTable.setRowHeight(25);
        itemsTable.setShowGrid(true);
        itemsTable.getTableHeader().setReorderingAllowed(false);
        itemsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                itemsTableMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(itemsTable);
        itemsTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        deleteItemb.setBackground(new java.awt.Color(204, 204, 204));
        deleteItemb.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        deleteItemb.setText("Delete ");
        deleteItemb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteItembActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(153, 0, 0));
        jLabel1.setText("Item Details");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(153, 0, 51));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Stock Dashboard");
        jLabel2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel8.setText("Price");

        itemTax.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("###.###"))));
        itemTax.setToolTipText("Enter 10 digit mob number ");
        itemTax.setMinimumSize(new java.awt.Dimension(64, 33));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel9.setText("Quantity");

        itemQuantity.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("######"))));
        itemQuantity.setToolTipText("Enter 10 digit mob number ");
        itemQuantity.setMinimumSize(new java.awt.Dimension(64, 33));

        ItemSerialNumber.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("##########"))));
        ItemSerialNumber.setToolTipText("Enter 10 digit mob number ");
        ItemSerialNumber.setMinimumSize(new java.awt.Dimension(64, 33));

        itemUploadb.setBackground(new java.awt.Color(204, 204, 204));
        itemUploadb.setIcon(new javax.swing.ImageIcon(getClass().getResource("/fileupload.jpg"))); // NOI18N
        itemUploadb.setIconTextGap(0);
        itemUploadb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemUploadbActionPerformed(evt);
            }
        });

        itemPrice.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("######.######"))));

        jLabel3.setBackground(new java.awt.Color(204, 204, 204));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cafe_1.png"))); // NOI18N
        jLabel3.setIconTextGap(0);

        Name.setBackground(new java.awt.Color(153, 204, 255));
        Name.setFont(new java.awt.Font("Times New Roman", 3, 48)); // NOI18N
        Name.setForeground(new java.awt.Color(102, 0, 0));
        Name.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Name.setText("Cafe  Management System");
        Name.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        resetb.setBackground(new java.awt.Color(204, 204, 204));
        resetb.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        resetb.setText("Reset");
        resetb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetbActionPerformed(evt);
            }
        });

        searchText.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        searchText.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        searchText.setText("Search for Item details");
        searchText.setToolTipText("");
        searchText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                searchTextFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                searchTextFocusLost(evt);
            }
        });
        searchText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchTextMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                searchTextMouseReleased(evt);
            }
        });
        searchText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                searchTextKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchTextKeyReleased(evt);
            }
        });

        Homeb.setBackground(new java.awt.Color(204, 204, 204));
        Homeb.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        Homeb.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Home.png"))); // NOI18N
        Homeb.setText("Home");
        Homeb.setIconTextGap(2);
        Homeb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HomebActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Name, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(ItemSerialNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(itemName, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addGap(4, 4, 4)
                                                    .addComponent(itemPhoto, javax.swing.GroupLayout.DEFAULT_SIZE, 209, Short.MAX_VALUE)))
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(itemTax, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(itemQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(itemPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(addItemb, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(itemUpdateb, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGroup(layout.createSequentialGroup()
                                                    .addGap(6, 6, 6)
                                                    .addComponent(resetb, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(itemUploadb, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(0, 162, Short.MAX_VALUE)
                                        .addComponent(searchText, javax.swing.GroupLayout.PREFERRED_SIZE, 509, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jScrollPane1)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(49, 49, 49)
                                .addComponent(Homeb)
                                .addGap(35, 35, 35)
                                .addComponent(deleteItemb, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Name, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(searchText, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(itemName, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ItemSerialNumber, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(itemUploadb, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(itemPhoto, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(itemTax, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(itemQuantity, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(itemPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(addItemb, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(itemUpdateb, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(resetb, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 474, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(deleteItemb, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Homeb, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
public void clearText() {
        itemName.setText("");
        ItemSerialNumber.setText("");
        itemPhoto.setText("");
        itemTax.setText("");
        itemQuantity.setText("");
        itemPrice.setText("");

    }

    public boolean[] itemDetailsValidation() {
        boolean validresult[] = {false, false, false};
        String SnoRegex = "[0-9]+$";

        try {
            Integer.parseInt(ItemSerialNumber.getText());
            validresult[0] = true;

        } catch (NumberFormatException e) {
            validresult[0] = false;
        }
        try {
            Integer.parseInt(itemQuantity.getText());
            validresult[1] = true;
        } catch (NumberFormatException e) {
            validresult[1] = false;
        }
        try {
            Float.parseFloat(itemTax.getText());
            Float.parseFloat(itemPrice.getText());
            validresult[2] = true;

        } catch (NumberFormatException e) {
            validresult[2] = false;
        }
        
         
        return validresult;
    }
    public boolean imageSizeCheck()
    {
       JOptionPane.showMessageDialog(this,"Size="+Toolkit.getDefaultToolkit().getImage(itemPrice.getText()).getWidth(this));
    return true;
    }
    private void addItembActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addItembActionPerformed

        if (itemName.getText().equals("") || ItemSerialNumber.getText().equals("") || itemPhoto.getText().equals("") || itemQuantity.getText().equals("") || itemTax.getText().equals("") || itemPrice.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Some Stock item field are Empty ", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (itemDetailsValidation()[0] == false) {
            JOptionPane.showMessageDialog(this, "Please Enter serial number in digit value ", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (itemDetailsValidation()[1] == false) {
            JOptionPane.showMessageDialog(this, "Please Enter Correct quantity in digit value  ", "Error", JOptionPane.ERROR_MESSAGE);
        }
        else if (itemDetailsValidation()[2] == false) {
            JOptionPane.showMessageDialog(this, "Please Enter tax,price in decimal value  ", "Error", JOptionPane.ERROR_MESSAGE);
        }
        
        else {
          
            Item item = new Item();
            item.setItemId(model.getRowCount() + 1);
            item.setItemName(itemName.getText());
            item.setItemSerialNum(ItemSerialNumber.getText());
            item.setPhotopath(itemPhoto.getText());
            item.setTax(Float.parseFloat(itemTax.getText()));
            item.setQuatity(Integer.parseInt(itemQuantity.getText()));
            item.setPrice(Float.parseFloat(itemPrice.getText()));

            Vector<String> v = new Vector<String>();
            v.add("" + item.getItemId());
            v.add("" + item.getItemName());
            v.add(item.getItemSerialNum());
            v.add(item.getPhotopath());
            v.add("" + item.getTax());
            v.add("" + item.getQuatity());
            v.add("" + item.getPrice());
            model.addRow(v);
            DataBaseHandler.update("insert into cms.item values ('" + item.getItemId() + "','" + item.getItemName() + "','" + item.getItemSerialNum() + "','" + item.getPhotopath() + "','" + item.getTax() + "','" + item.getQuatity() + "','" + item.getPrice() + "');");

            JOptionPane.showMessageDialog(this, "item added successfully.. ");
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_addItembActionPerformed

    private void itemUploadbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemUploadbActionPerformed

        JFileChooser fc = new JFileChooser();
        int returnVal = fc.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fc.getSelectedFile();
            itemPhoto.setText(file.getName());
        }
    }//GEN-LAST:event_itemUploadbActionPerformed

    public void searchItemData(String str) {
        TableRowSorter trs = new TableRowSorter(model);
        itemsTable.setRowSorter(trs);
        trs.setRowFilter(RowFilter.regexFilter(str));
    }
    private void resetbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetbActionPerformed
     

                clearText();

          


    }//GEN-LAST:event_resetbActionPerformed

    private void deleteItembActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteItembActionPerformed
//correct
        if (itemsTable.getSelectedRowCount() == 1) {
            // model.removeRow(userTable.getSelectedRow());
            System.out.println("selected row count=" + itemsTable.getSelectedRow());
            Vector selectedRowVector = (model.getDataVector()).get(itemsTable.getSelectedRow());

            int itemId = Integer.parseInt((String) selectedRowVector.get(0));
            model.removeRow(itemsTable.getSelectedRow());
            DataBaseHandler.update("delete from cms.item where itemId='" + itemId + "';");

        } else if (itemsTable.getSelectedRowCount() == 0) {
            JOptionPane.showMessageDialog(this, "item table is Empty ");
        } else {
            JOptionPane.showMessageDialog(this, "you selected more than one row for delete ");
        }
    }//GEN-LAST:event_deleteItembActionPerformed

    private void itemsTableMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_itemsTableMouseReleased

        Vector selectedRowVector = (model.getDataVector()).get(itemsTable.getSelectedRow());
        String fullname = (String) selectedRowVector.get(1);
        String mobNumer = (String) selectedRowVector.get(2);
        String emailId = (String) selectedRowVector.get(3);
        String address = (String) selectedRowVector.get(4);

        this.itemName.setText((String) selectedRowVector.get(1));
        ItemSerialNumber.setText((String) selectedRowVector.get(2));
        itemPhoto.setText((String) selectedRowVector.get(3));
        this.itemTax.setText((String) selectedRowVector.get(4));
        this.itemQuantity.setText((String) selectedRowVector.get(5));
        this.itemPrice.setText((String) selectedRowVector.get(6));
    }//GEN-LAST:event_itemsTableMouseReleased

    private void itemUpdatebActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemUpdatebActionPerformed

        
        
        
        if (itemsTable.getSelectedRowCount() == 1) {
            Vector selectedRowVector = (model.getDataVector()).get(itemsTable.getSelectedRow());

            int itemId = Integer.parseInt((String) (selectedRowVector.get(0)));//selectedRowVector.get(0));
            String itemsName = (String) selectedRowVector.get(1);
            String itemSno = (String) selectedRowVector.get(2);
            String itemPhotoPath = (String) selectedRowVector.get(3);
            String itemsTax = (String) selectedRowVector.get(4);
            String itemsQuantity = (String) selectedRowVector.get(5);
            String itemsPrice = (String) selectedRowVector.get(6);
            String txtitemName = this.itemName.getText();
            String txtitemSno = ItemSerialNumber.getText();
            String txtitemPhotopath = itemPhoto.getText();
            String txtitemTax = this.itemTax.getText();
            String txtitemQuatity = this.itemQuantity.getText();
            String txtitemPrice = this.itemPrice.getText();
            if (itemsName.equals(txtitemName) && itemSno.equals(txtitemSno) && itemPhotoPath.equals(txtitemPhotopath) && itemsTax.equals(txtitemTax) && itemQuantity.equals(txtitemQuatity) && itemsPrice.equals(txtitemPrice)) {
                JOptionPane.showMessageDialog(this, "Data has not changed  ");
            } else 
            {
            
                 if (itemName.getText().equals("") || ItemSerialNumber.getText().equals("") || itemPhoto.getText().equals("") || itemQuantity.getText().equals("") || itemTax.getText().equals("") || itemPrice.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Some Stock item field are Empty ", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (itemDetailsValidation()[0] == false) {
            JOptionPane.showMessageDialog(this, "Please Enter serial number in digit value ", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (itemDetailsValidation()[1] == false) {
            JOptionPane.showMessageDialog(this, "Please Enter Correct quantity in digit value  ", "Error", JOptionPane.ERROR_MESSAGE);
        }
        else if (itemDetailsValidation()[2] == false) {
            JOptionPane.showMessageDialog(this, "Please Enter tax,price in decimal value  ", "Error", JOptionPane.ERROR_MESSAGE);
        }
         else
        {
                
                
                
               
                //  DataBaseHandler.update("\"update  cms.customer set customerFullName='\"+customerFullName.getText()+"',mobNumber='"+customerMobNumber.getText()+"',emailId='"+ CustomerEmailId.getText()+"',address='\"+CustomerAddress.getText()+\"' where customerId=\"+customerId+\";\");
                DataBaseHandler.update("update  cms.item set itemName='" + txtitemName + "',itemSerialNum='" + txtitemSno + "',itemPhoto='" + txtitemPhotopath + "',tax='" + txtitemTax + "',Quantity=" + Integer.parseInt(txtitemQuatity) + ",price='" + txtitemPrice + "' where itemId=" + itemId + ";");

                model.setValueAt(txtitemName, itemsTable.getSelectedRow(), 1);
                model.setValueAt(txtitemSno, itemsTable.getSelectedRow(), 2);
                model.setValueAt(txtitemPhotopath, itemsTable.getSelectedRow(), 3);
                model.setValueAt(this.itemTax.getText(), itemsTable.getSelectedRow(), 4);
                model.setValueAt(txtitemQuatity, itemsTable.getSelectedRow(), 5);
                model.setValueAt(txtitemPrice, itemsTable.getSelectedRow(), 6);

                JOptionPane.showMessageDialog(this, "Data has been SuccessFully Updated .. ");
                clearText();
        }
            }
        } else if (itemsTable.getSelectedRowCount() == 0) {
            JOptionPane.showMessageDialog(this, "Item table is Empty ");
        } else {
            JOptionPane.showMessageDialog(this, "you selected more than one row for delete ");
        }


    }//GEN-LAST:event_itemUpdatebActionPerformed

    private void searchTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchTextFocusGained

        if (searchText.getText().equals("Search for Item details")) {

            searchText.setText(null);
            searchText.requestFocus();
            Font f = searchText.getFont();
            f = f.deriveFont(Font.PLAIN | Font.BOLD);
            searchText.setForeground(Color.BLACK);
            searchText.setFont(f);
        }
    }//GEN-LAST:event_searchTextFocusGained

    private void searchTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchTextFocusLost

        if (searchText.getText().length() == 0) {

            Font f = searchText.getFont();
            searchText.setFont(f.deriveFont(Font.ITALIC));
            searchText.setForeground(Color.GRAY);
            searchText.setText("Search for Item details");
        }// TODO add your handling code here:
    }//GEN-LAST:event_searchTextFocusLost

    private void searchTextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchTextMouseClicked

    }//GEN-LAST:event_searchTextMouseClicked

    private void searchTextMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchTextMouseReleased

        //searchText.setText("Search for customer details");
    }//GEN-LAST:event_searchTextMouseReleased

    private void searchTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchTextKeyPressed

    }//GEN-LAST:event_searchTextKeyPressed

    private void searchTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchTextKeyReleased
        // TODO add your handling code here:

        searchItemData(searchText.getText());
    }//GEN-LAST:event_searchTextKeyReleased

    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus
        this.requestFocusInWindow();

    }//GEN-LAST:event_formWindowGainedFocus

    private void HomebActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HomebActionPerformed

        this.setVisible(false);
        //this.getParent().setVisible(true);
    }//GEN-LAST:event_HomebActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CustomerHandlerDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CustomerHandlerDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CustomerHandlerDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CustomerHandlerDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CustomerHandlerDashboard().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Homeb;
    private javax.swing.JFormattedTextField ItemSerialNumber;
    private javax.swing.JLabel Name;
    private javax.swing.JButton addItemb;
    private javax.swing.JButton deleteItemb;
    private javax.swing.JTextField itemName;
    private javax.swing.JFormattedTextField itemPhoto;
    private javax.swing.JFormattedTextField itemPrice;
    private javax.swing.JFormattedTextField itemQuantity;
    private javax.swing.JFormattedTextField itemTax;
    private javax.swing.JButton itemUpdateb;
    private javax.swing.JButton itemUploadb;
    private javax.swing.JTable itemsTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton resetb;
    private javax.swing.JTextField searchText;
    // End of variables declaration//GEN-END:variables
}
