
import java.awt.Color;
import java.awt.Font;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author sandip
 */
public class SearchCustomerFrame extends javax.swing.JFrame {

    DefaultTableModel model;
    

    /**
     * Creates new form CustomerHandlerDashboard
     */
    public SearchCustomerFrame() {
        initComponents();
        //searchText.requestFocus();
        customerTable.getTableHeader().setBackground(Color.lightGray);
        Font f = searchText.getFont();
        searchText.setFont(f.deriveFont(Font.ITALIC));
        searchText.setForeground(Color.GRAY);

        model = (DefaultTableModel) customerTable.getModel();
        model.setNumRows(0);
        try {
            ResultSet rs = DataBaseHandler.getDbConn().createStatement().executeQuery("select *from cms.customer");
            while (rs.next()) {
                Vector<String> v = new Vector<String>();
                v.add("" + rs.getInt(1));
                v.add(rs.getString(2));
                v.add(rs.getString(3));
                v.add(rs.getString(4));
                v.add(rs.getString(5));
                model.addRow(v);
            }
        } catch (SQLException ex) {
            Logger.getLogger(UserHandlerDashboard.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel4 = new javax.swing.JLabel();
        customerFullName = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        customerMobNumber = new javax.swing.JFormattedTextField();
        jLabel6 = new javax.swing.JLabel();
        CustomerEmailId = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        CustomerAddress = new javax.swing.JTextArea();
        addCusstomerb = new javax.swing.JButton();
        updateCustomerb = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        customerTable = new javax.swing.JTable();
        deleteCustomerb = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        Name = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        clearCustomerb = new javax.swing.JButton();
        cancelCustomerb1 = new javax.swing.JButton();
        searchText = new javax.swing.JTextField();
        selectedCustomerForOrderb = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setText("Full Name ");

        customerFullName.setToolTipText("Enter USer Full Name");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel5.setText("Mobile  Number  ");
        jLabel5.setToolTipText("");

        customerMobNumber.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("##########"))));
        customerMobNumber.setToolTipText("Enter 10 digit mob number ");
        customerMobNumber.setMinimumSize(new java.awt.Dimension(64, 33));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel6.setText(" E-mail Id ");

        CustomerEmailId.setPreferredSize(new java.awt.Dimension(64, 33));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel7.setText("Address");

        CustomerAddress.setColumns(20);
        CustomerAddress.setRows(3);
        CustomerAddress.setTabSize(5);
        jScrollPane2.setViewportView(CustomerAddress);

        addCusstomerb.setBackground(new java.awt.Color(204, 204, 204));
        addCusstomerb.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        addCusstomerb.setText("Add ");
        addCusstomerb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCusstomerbActionPerformed(evt);
            }
        });

        updateCustomerb.setBackground(new java.awt.Color(204, 204, 204));
        updateCustomerb.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        updateCustomerb.setText("Update");
        updateCustomerb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateCustomerbActionPerformed(evt);
            }
        });

        customerTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Customer Id", "Full Name ", "Mobile Number", "Email-id", "Address"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        customerTable.setRowHeight(25);
        customerTable.setShowGrid(true);
        customerTable.getTableHeader().setReorderingAllowed(false);
        customerTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                customerTableMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(customerTable);
        customerTable.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        deleteCustomerb.setBackground(new java.awt.Color(204, 204, 204));
        deleteCustomerb.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        deleteCustomerb.setText("Delete ");
        deleteCustomerb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteCustomerbActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(153, 0, 0));
        jLabel1.setText("Customer Details");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(153, 0, 51));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Customers Dashboard");
        jLabel2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        Name.setBackground(new java.awt.Color(153, 204, 255));
        Name.setFont(new java.awt.Font("Times New Roman", 3, 48)); // NOI18N
        Name.setForeground(new java.awt.Color(102, 0, 0));
        Name.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Name.setText("Cafe  Management System");
        Name.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        jLabel3.setBackground(new java.awt.Color(204, 204, 204));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cafe_1.png"))); // NOI18N
        jLabel3.setIconTextGap(0);

        clearCustomerb.setBackground(new java.awt.Color(204, 204, 204));
        clearCustomerb.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        clearCustomerb.setText("Clear");
        clearCustomerb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearCustomerbActionPerformed(evt);
            }
        });

        cancelCustomerb1.setBackground(new java.awt.Color(204, 204, 204));
        cancelCustomerb1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        cancelCustomerb1.setText("Cancel");

        searchText.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        searchText.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        searchText.setText("Search for customer details");
        searchText.setToolTipText("");
        searchText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                searchTextFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                searchTextFocusLost(evt);
            }
        });
        searchText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchTextMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                searchTextMouseReleased(evt);
            }
        });
        searchText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                searchTextKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchTextKeyReleased(evt);
            }
        });

        selectedCustomerForOrderb.setBackground(new java.awt.Color(204, 255, 204));
        selectedCustomerForOrderb.setText("Select Customer");
        selectedCustomerForOrderb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectedCustomerForOrderbActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Name, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(clearCustomerb, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(cancelCustomerb1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(addCusstomerb, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(updateCustomerb, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(customerMobNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(CustomerEmailId, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(customerFullName, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 398, Short.MAX_VALUE)
                                .addComponent(searchText, javax.swing.GroupLayout.PREFERRED_SIZE, 538, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(24, 24, 24))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(deleteCustomerb, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(45, 45, 45)
                                .addComponent(selectedCustomerForOrderb, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Name, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(searchText, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(customerFullName, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(customerMobNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CustomerEmailId, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(addCusstomerb, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(updateCustomerb, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(clearCustomerb, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cancelCustomerb1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(deleteCustomerb, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(selectedCustomerForOrderb, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(14, 14, 14))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addCusstomerbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCusstomerbActionPerformed
        Customer c = new Customer();
        c.setCustomerId(model.getRowCount() + 1);
        c.setCustomerFullNAme(customerFullName.getText());
        c.setMobNumber(customerMobNumber.getText());
        c.setEmailId(CustomerEmailId.getText());
        c.setAddress(CustomerAddress.getText());

        Vector<String> v = new Vector<String>();
        v.add("" + c.getCustomerId());
        v.add(c.getCustomerFullNAme());
        v.add(c.getMobNumber());
        v.add(c.getEmailId());
        v.add(c.getAddress());
        model.addRow(v);
        DataBaseHandler.update("insert into cms.customer (customerFullName,mobNumber,emailId,address) values ('" + c.getCustomerFullNAme() + "','" + c.getMobNumber() + "','" + c.getEmailId() + "','" + c.getAddress() + "');");
        customerFullName.setText("");
        CustomerEmailId.setText("");
        customerMobNumber.setText("");
        CustomerAddress.setText("");
        JOptionPane.showMessageDialog(this, "user added successfully.. ");

    }//GEN-LAST:event_addCusstomerbActionPerformed

    public void searchCustomerData(String str) {
        TableRowSorter trs = new TableRowSorter(model);
        customerTable.setRowSorter(trs);
        trs.setRowFilter(RowFilter.regexFilter(str));
    }
    private void updateCustomerbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateCustomerbActionPerformed
        if (customerTable.getSelectedRowCount() == 1) {
            Vector selectedRowVector = (model.getDataVector()).get(customerTable.getSelectedRow());

            int customerId = Integer.parseInt((String) selectedRowVector.get(0));
            String fullname = (String) selectedRowVector.get(1);
            String mobNumer = (String) selectedRowVector.get(2);
            String emailId = (String) selectedRowVector.get(3);
            String address = (String) selectedRowVector.get(4);

            if (fullname.equals(customerFullName.getText()) && mobNumer.equals(customerMobNumber.getText()) && emailId.equals(CustomerEmailId.getText()) && address.equals(CustomerAddress.getText())) {
                JOptionPane.showMessageDialog(this, "Data has not changed  ");

            } else {
                System.err.println("Customer id=" + customerId + " updated ");
                //  DataBaseHandler.update("\"update  cms.customer set customerFullName='\"+customerFullName.getText()+"',mobNumber='"+customerMobNumber.getText()+"',emailId='"+ CustomerEmailId.getText()+"',address='\"+CustomerAddress.getText()+\"' where customerId=\"+customerId+\";\");
                DataBaseHandler.update("update  cms.customer set customerFullName='" + customerFullName.getText() + "',mobNumber='" + customerMobNumber.getText() + "',emailId='" + CustomerEmailId.getText() + "',address='" + CustomerAddress.getText() + "' where customerId=" + customerId + ";");

                model.setValueAt(customerFullName.getText(), customerTable.getSelectedRow(), 1);
                model.setValueAt(CustomerEmailId.getText(), customerTable.getSelectedRow(), 3);
                model.setValueAt(customerMobNumber.getText(), customerTable.getSelectedRow(), 2);
                model.setValueAt(CustomerAddress.getText(), customerTable.getSelectedRow(), 4);
                JOptionPane.showMessageDialog(this, "Data has been SuccessFully Updated .. ");

                customerFullName.setText("");
                CustomerEmailId.setText("");
                customerMobNumber.setText("");
                CustomerAddress.setText("");

            }

        } else if (customerTable.getSelectedRowCount() == 0) {
            JOptionPane.showMessageDialog(this, "Customer table is Empty ");
        } else {
            JOptionPane.showMessageDialog(this, "you selected more than one row for delete ");
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_updateCustomerbActionPerformed

    private void deleteCustomerbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteCustomerbActionPerformed
        if (customerTable.getSelectedRowCount() == 1) {
            // model.removeRow(userTable.getSelectedRow());
            System.out.println("selected row count=" + customerTable.getSelectedRow());
            Vector selectedRowVector = (model.getDataVector()).get(customerTable.getSelectedRow());

            int customerId = Integer.parseInt((String) selectedRowVector.get(0));
            model.removeRow(customerTable.getSelectedRow());
            DataBaseHandler.update("delete from cms.customer where customerId='" + customerId + "';");

        } else if (customerTable.getSelectedRowCount() == 0) {
            JOptionPane.showMessageDialog(this, "Customer table is Empty ");
        } else {
            JOptionPane.showMessageDialog(this, "you selected more than one row for delete ");
        }        // TODO add your handling code here:
    }//GEN-LAST:event_deleteCustomerbActionPerformed

    private void customerTableMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_customerTableMouseReleased
        Vector selectedRowVector = (model.getDataVector()).get(customerTable.getSelectedRow());
        String fullname = (String) selectedRowVector.get(1);
        String mobNumer = (String) selectedRowVector.get(2);
        String emailId = (String) selectedRowVector.get(3);
        String address = (String) selectedRowVector.get(4);
        customerFullName.setText(fullname);
        customerMobNumber.setText(mobNumer);
        CustomerEmailId.setText(emailId);
        CustomerAddress.setText(address);
    }//GEN-LAST:event_customerTableMouseReleased

    private void clearCustomerbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearCustomerbActionPerformed
        // TODO add your 
        customerFullName.setText("");
        customerMobNumber.setText("");
        CustomerEmailId.setText("");
        CustomerAddress.setText("");
    }//GEN-LAST:event_clearCustomerbActionPerformed

    private void searchTextMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchTextMouseReleased

        //searchText.setText("Search for customer details");
    }//GEN-LAST:event_searchTextMouseReleased

    private void searchTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchTextKeyReleased
        // TODO add your handling code here:

        searchCustomerData(searchText.getText());
    }//GEN-LAST:event_searchTextKeyReleased

    private void searchTextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchTextMouseClicked

    }//GEN-LAST:event_searchTextMouseClicked

    private void searchTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchTextKeyPressed


    }//GEN-LAST:event_searchTextKeyPressed

    private void searchTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchTextFocusGained

        if (searchText.getText().equals("Search for customer details")) {

            searchText.setText(null);
            searchText.requestFocus();
            Font f = searchText.getFont();
            f = f.deriveFont(Font.PLAIN | Font.BOLD);
            searchText.setForeground(Color.BLACK);
            searchText.setFont(f);
        }
    }//GEN-LAST:event_searchTextFocusGained

    private void searchTextFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchTextFocusLost

        if (searchText.getText().length() == 0) {

            Font f = searchText.getFont();
            searchText.setFont(f.deriveFont(Font.ITALIC));
            searchText.setForeground(Color.GRAY);
            searchText.setText("Search for customer details");
        }// TODO add your handling code here:
    }//GEN-LAST:event_searchTextFocusLost

    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus
        this.requestFocusInWindow();
    }//GEN-LAST:event_formWindowGainedFocus

    private void selectedCustomerForOrderbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectedCustomerForOrderbActionPerformed
        int row=customerTable.getSelectedRow();
        if(row>=0)
        {
            System.err.println("Row selected !!");
          Vector selectedRowVector = (model.getDataVector()).get(customerTable.getSelectedRow());

            int customerId = Integer.parseInt((String) selectedRowVector.get(0));
            String fullname = (String) selectedRowVector.get(1);
            String mobNumer = (String) selectedRowVector.get(2);
            String emailId = (String) selectedRowVector.get(3);
            String address = (String) selectedRowVector.get(4);
            
            
            OrderFrame.selectedCustomer.setCustomerId(customerId);
             OrderFrame.selectedCustomer.setCustomerFullNAme(fullname);
             OrderFrame.selectedCustomer.setMobNumber(mobNumer);
             OrderFrame.selectedCustomer.setEmailId(emailId);
             OrderFrame.selectedCustomer.setAddress(address);
            //this.dispose();
            this.setVisible(false);
            OrderFrame.selectedCustomerName.setForeground(new Color(153,51,0));
            OrderFrame.selectedCustomerName.setText("Full Name-"+fullname);
            OrderFrame.mob.setText("Mobile Number -"+mobNumer);
          
        }
        else
            JOptionPane.showMessageDialog(this, "Please select One Customer to make Order ..");
    }//GEN-LAST:event_selectedCustomerForOrderbActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CustomerHandlerDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CustomerHandlerDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CustomerHandlerDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CustomerHandlerDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CustomerHandlerDashboard().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea CustomerAddress;
    private javax.swing.JTextField CustomerEmailId;
    private javax.swing.JLabel Name;
    private javax.swing.JButton addCusstomerb;
    private javax.swing.JButton cancelCustomerb1;
    private javax.swing.JButton clearCustomerb;
    private javax.swing.JTextField customerFullName;
    private javax.swing.JFormattedTextField customerMobNumber;
    private javax.swing.JTable customerTable;
    private javax.swing.JButton deleteCustomerb;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField searchText;
    private javax.swing.JButton selectedCustomerForOrderb;
    private javax.swing.JButton updateCustomerb;
    // End of variables declaration//GEN-END:variables
}
